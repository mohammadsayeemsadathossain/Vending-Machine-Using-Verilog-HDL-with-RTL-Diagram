// Copyright (C) 1991-2008 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II"
// VERSION "Version 8.1 Build 163 10/28/2008 SJ Web Edition"

// DATE "07/31/2022 03:57:25"

// 
// Device: Altera EPF10K30ETC144-1 Package TQFP144
// 

// 
// This Verilog file should be used for Custom Verilog HDL only
// 

`timescale 1 ps/ 1 ps

module vendingMachine (
	clock,
	reset,
	cash_in,
	purchase,
	present_state,
	next_state,
	cash_return);
input 	clock;
input 	reset;
input 	[1:0] cash_in;
output 	purchase;
output 	[1:0] present_state;
output 	[1:0] next_state;
output 	[1:0] cash_return;

wire gnd = 1'b0;
wire vcc = 1'b1;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("vendingMachine_v.sdo");
// synopsys translate_on

wire \reset~dataout ;
wire \purchase~15_combout ;
wire \clock~dataout ;
wire \next_state[0]~reg0_regout ;
wire \purchase~reg0_regout ;
wire \present_state[0]~reg0_regout ;
wire \cash_return[0]~reg0_regout ;
wire \cash_return[1]~reg0_regout ;
wire [1:0] \cash_in~dataout ;


// atom is at PIN_54
flex10ke_io \reset~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\reset~dataout ),
	.padio(reset));
// synopsys translate_off
defparam \reset~I .feedback_mode = "from_pin";
defparam \reset~I .operation_mode = "input";
defparam \reset~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at LC3_F17
flex10ke_lcell \purchase~15 (
// Equation(s):
// \purchase~15_combout  = !\reset~dataout 

	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\reset~dataout ),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\purchase~15_combout ),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \purchase~15 .clock_enable_mode = "false";
defparam \purchase~15 .lut_mask = "00ff";
defparam \purchase~15 .operation_mode = "normal";
defparam \purchase~15 .output_mode = "comb_only";
defparam \purchase~15 .packed_mode = "false";
// synopsys translate_on

// atom is at PIN_126
flex10ke_io \cash_in[1]~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\cash_in~dataout [1]),
	.padio(cash_in[1]));
// synopsys translate_off
defparam \cash_in[1]~I .feedback_mode = "from_pin";
defparam \cash_in[1]~I .operation_mode = "input";
defparam \cash_in[1]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_55
flex10ke_io \clock~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\clock~dataout ),
	.padio(clock));
// synopsys translate_off
defparam \clock~I .feedback_mode = "from_pin";
defparam \clock~I .operation_mode = "input";
defparam \clock~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at LC6_F17
flex10ke_lcell \next_state[0]~reg0 (
// Equation(s):
// \next_state[0]~reg0_regout  = DFFEA(\cash_in~dataout [0] & !\cash_in~dataout [1] & !\next_state[0]~reg0_regout  & !\reset~dataout , GLOBAL(\clock~dataout ), , , , , )

	.dataa(\cash_in~dataout [0]),
	.datab(\cash_in~dataout [1]),
	.datac(\next_state[0]~reg0_regout ),
	.datad(\reset~dataout ),
	.aclr(gnd),
	.aload(gnd),
	.clk(\clock~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\next_state[0]~reg0_regout ),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \next_state[0]~reg0 .clock_enable_mode = "false";
defparam \next_state[0]~reg0 .lut_mask = "0002";
defparam \next_state[0]~reg0 .operation_mode = "normal";
defparam \next_state[0]~reg0 .output_mode = "reg_only";
defparam \next_state[0]~reg0 .packed_mode = "false";
// synopsys translate_on

// atom is at PIN_124
flex10ke_io \cash_in[0]~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\cash_in~dataout [0]),
	.padio(cash_in[0]));
// synopsys translate_off
defparam \cash_in[0]~I .feedback_mode = "from_pin";
defparam \cash_in[0]~I .operation_mode = "input";
defparam \cash_in[0]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at LC1_F17
flex10ke_lcell \purchase~reg0 (
// Equation(s):
// \purchase~reg0_regout  = DFFEA(\cash_in~dataout [1] # \next_state[0]~reg0_regout  & \cash_in~dataout [0], GLOBAL(\clock~dataout ), , , \purchase~15_combout , , )

	.dataa(\purchase~15_combout ),
	.datab(\next_state[0]~reg0_regout ),
	.datac(\cash_in~dataout [0]),
	.datad(\cash_in~dataout [1]),
	.aclr(gnd),
	.aload(gnd),
	.clk(\clock~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\purchase~reg0_regout ),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \purchase~reg0 .clock_enable_mode = "true";
defparam \purchase~reg0 .lut_mask = "ffc0";
defparam \purchase~reg0 .operation_mode = "normal";
defparam \purchase~reg0 .output_mode = "reg_only";
defparam \purchase~reg0 .packed_mode = "false";
// synopsys translate_on

// atom is at LC8_F17
flex10ke_lcell \present_state[0]~reg0 (
// Equation(s):
// \present_state[0]~reg0_regout  = DFFEA(\next_state[0]~reg0_regout  & !\reset~dataout , GLOBAL(\clock~dataout ), , , , , )

	.dataa(vcc),
	.datab(vcc),
	.datac(\next_state[0]~reg0_regout ),
	.datad(\reset~dataout ),
	.aclr(gnd),
	.aload(gnd),
	.clk(\clock~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\present_state[0]~reg0_regout ),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \present_state[0]~reg0 .clock_enable_mode = "false";
defparam \present_state[0]~reg0 .lut_mask = "00f0";
defparam \present_state[0]~reg0 .operation_mode = "normal";
defparam \present_state[0]~reg0 .output_mode = "reg_only";
defparam \present_state[0]~reg0 .packed_mode = "false";
// synopsys translate_on

// atom is at LC2_F17
flex10ke_lcell \cash_return[0]~reg0 (
// Equation(s):
// \cash_return[0]~reg0_regout  = DFFEA(\next_state[0]~reg0_regout  & (\cash_in~dataout [1] # !\cash_in~dataout [0]), GLOBAL(\clock~dataout ), , , \purchase~15_combout , , )

	.dataa(\purchase~15_combout ),
	.datab(\cash_in~dataout [1]),
	.datac(\next_state[0]~reg0_regout ),
	.datad(\cash_in~dataout [0]),
	.aclr(gnd),
	.aload(gnd),
	.clk(\clock~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\cash_return[0]~reg0_regout ),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \cash_return[0]~reg0 .clock_enable_mode = "true";
defparam \cash_return[0]~reg0 .lut_mask = "c0f0";
defparam \cash_return[0]~reg0 .operation_mode = "normal";
defparam \cash_return[0]~reg0 .output_mode = "reg_only";
defparam \cash_return[0]~reg0 .packed_mode = "false";
// synopsys translate_on

// atom is at LC4_F17
flex10ke_lcell \cash_return[1]~reg0 (
// Equation(s):
// \cash_return[1]~reg0_regout  = DFFEA(\cash_in~dataout [1] & \cash_in~dataout [0], GLOBAL(\clock~dataout ), , , \purchase~15_combout , , )

	.dataa(\purchase~15_combout ),
	.datab(vcc),
	.datac(\cash_in~dataout [1]),
	.datad(\cash_in~dataout [0]),
	.aclr(gnd),
	.aload(gnd),
	.clk(\clock~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\cash_return[1]~reg0_regout ),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \cash_return[1]~reg0 .clock_enable_mode = "true";
defparam \cash_return[1]~reg0 .lut_mask = "f000";
defparam \cash_return[1]~reg0 .operation_mode = "normal";
defparam \cash_return[1]~reg0 .output_mode = "reg_only";
defparam \cash_return[1]~reg0 .packed_mode = "false";
// synopsys translate_on

// atom is at PIN_82
flex10ke_io \purchase~I (
	.datain(\purchase~reg0_regout ),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(),
	.padio(purchase));
// synopsys translate_off
defparam \purchase~I .feedback_mode = "none";
defparam \purchase~I .operation_mode = "output";
defparam \purchase~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_78
flex10ke_io \present_state[0]~I (
	.datain(\present_state[0]~reg0_regout ),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(),
	.padio(present_state[0]));
// synopsys translate_off
defparam \present_state[0]~I .feedback_mode = "none";
defparam \present_state[0]~I .operation_mode = "output";
defparam \present_state[0]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_22
flex10ke_io \present_state[1]~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(),
	.padio(present_state[1]));
// synopsys translate_off
defparam \present_state[1]~I .feedback_mode = "none";
defparam \present_state[1]~I .operation_mode = "output";
defparam \present_state[1]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_79
flex10ke_io \next_state[0]~I (
	.datain(\next_state[0]~reg0_regout ),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(),
	.padio(next_state[0]));
// synopsys translate_off
defparam \next_state[0]~I .feedback_mode = "none";
defparam \next_state[0]~I .operation_mode = "output";
defparam \next_state[0]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_51
flex10ke_io \next_state[1]~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(),
	.padio(next_state[1]));
// synopsys translate_off
defparam \next_state[1]~I .feedback_mode = "none";
defparam \next_state[1]~I .operation_mode = "output";
defparam \next_state[1]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_81
flex10ke_io \cash_return[0]~I (
	.datain(\cash_return[0]~reg0_regout ),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(),
	.padio(cash_return[0]));
// synopsys translate_off
defparam \cash_return[0]~I .feedback_mode = "none";
defparam \cash_return[0]~I .operation_mode = "output";
defparam \cash_return[0]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_80
flex10ke_io \cash_return[1]~I (
	.datain(\cash_return[1]~reg0_regout ),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(),
	.padio(cash_return[1]));
// synopsys translate_off
defparam \cash_return[1]~I .feedback_mode = "none";
defparam \cash_return[1]~I .operation_mode = "output";
defparam \cash_return[1]~I .reg_source_mode = "none";
// synopsys translate_on

endmodule
